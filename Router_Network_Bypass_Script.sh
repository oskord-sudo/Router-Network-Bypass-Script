#!/bin/sh

set -e  # –í—ã—Ö–æ–¥ –ø—Ä–∏ –ª—é–±–æ–π –æ—à–∏–±–∫–µ

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ root
if [ "$(id -u)" -ne 0 ]; then
    echo "‚ùå –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è —Å –ø—Ä–∞–≤–∞–º–∏ root"
    exit 1
fi

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
LOG_FILE="/tmp/router_config.log"
exec > >(tee -a "$LOG_FILE") 2>&1

echo "=== –ù–∞—á–∞–ª–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞ $(date) ==="

# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–∞–∫–µ—Ç–æ–≤
install_package() {
    local package="$1"
    local filename="$2"
    local url="$3"
    local temp_dir="$4"
    
    if opkg list-installed | grep -q "^${package} "; then
        echo "‚úÖ $package —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        return 0
    fi
    
    echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ $package..."
    
    if ! wget -q --timeout=30 -O "$temp_dir/$filename" "$url"; then
        echo "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ $package"
        return 1
    fi
    
    if ! opkg install "$temp_dir/$filename"; then
        echo "‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ $package"
        return 1
    fi
    
    echo "‚úÖ $package —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    return 0
}

install_awg_packages() {
    echo "üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ AmneziaWG –ø–∞–∫–µ—Ç–æ–≤..."
    
    if ! PKGARCH=$(opkg print-architecture | awk 'BEGIN {max=0} {if ($3 > max) {max = $3; arch = $2}} END {print arch}'); then
        echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É –ø–∞–∫–µ—Ç–æ–≤"
        return 1
    fi
    
    local TARGET=$(ubus call system board | jsonfilter -e '@.release.target' | cut -d '/' -f 1)
    local SUBTARGET=$(ubus call system board | jsonfilter -e '@.release.target' | cut -d '/' -f 2)
    local VERSION=$(ubus call system board | jsonfilter -e '@.release.version')
    
    [ -z "$VERSION" ] && { echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤–µ—Ä—Å–∏—é"; return 1; }
    
    local PKGPOSTFIX="_v${VERSION}_${PKGARCH}_${TARGET}_${SUBTARGET}.ipk"
    local BASE_URL="https://github.com/Slava-Shchipunov/awg-openwrt/releases/download/"
    local AWG_DIR="/tmp/amneziawg"
    
    mkdir -p "$AWG_DIR"
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–æ–≤ —á–µ—Ä–µ–∑ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
    install_package "kmod-amneziawg" "kmod-amneziawg${PKGPOSTFIX}" "${BASE_URL}v${VERSION}/kmod-amneziawg${PKGPOSTFIX}" "$AWG_DIR" || return 1
    install_package "amneziawg-tools" "amneziawg-tools${PKGPOSTFIX}" "${BASE_URL}v${VERSION}/amneziawg-tools${PKGPOSTFIX}" "$AWG_DIR" || return 1
    install_package "luci-app-amneziawg" "luci-app-amneziawg${PKGPOSTFIX}" "${BASE_URL}v${VERSION}/luci-app-amneziawg${PKGPOSTFIX}" "$AWG_DIR" || return 1
    
    rm -rf "$AWG_DIR"
    echo "‚úÖ AmneziaWG –ø–∞–∫–µ—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ"
}

# –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –¥–æ–º–µ–Ω–æ–≤
safe_remove_domains() {
    echo "üßπ –û—á–∏—Å—Ç–∫–∞ –¥–æ–º–µ–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π..."
    local keep_domains=("chatgpt.com" "openai.com")  # –î–æ–º–µ–Ω—ã –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —Å –Ω—É–∂–Ω—ã–º–∏ –¥–æ–º–µ–Ω–∞–º–∏
    uci show dhcp | grep domain | while read -r line; do
        local domain_name=$(echo "$line" | grep -o "domain\\[[0-9]*\\].name='[^']*'" | cut -d"'" -f2)
        if [ -n "$domain_name" ]; then
            if printf '%s\n' "${keep_domains[@]}" | grep -q "^$domain_name$"; then
                echo "–°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–æ–º–µ–Ω: $domain_name"
            else
                local section=$(echo "$line" | cut -d. -f1-2)
                uci delete "$section"
            fi
        fi
    done
    
    uci commit dhcp
}

# –£–ª—É—á—à–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–∏—Å–æ–≤
check_service_health() {
    local service="$1"
    local test_url="$2"
    
    if ! service "$service" status > /dev/null 2>&1; then
        echo "‚ùå –°–µ—Ä–≤–∏—Å $service –Ω–µ –∑–∞–ø—É—â–µ–Ω"
        return 1
    fi
    
    if [ -n "$test_url" ]; then
        if ! curl --max-time 10 -s -o /dev/null "$test_url"; then
            echo "‚ö†Ô∏è –°–µ—Ä–≤–∏—Å $service –∑–∞–ø—É—â–µ–Ω, –Ω–æ —Ç–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω"
            return 2
        fi
    fi
    
    echo "‚úÖ –°–µ—Ä–≤–∏—Å $service —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ"
    return 0
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
main() {
    local is_manual_input_parameters="${1:-n}"
    local is_reconfig_podkop="${2:-y}"
    
    echo "üöÄ –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ OpenWRT —Ä–æ—É—Ç–µ—Ä–∞..."
    
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–∞–∫–µ—Ç–æ–≤
    if ! opkg update; then
        echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–∞–∫–µ—Ç–æ–≤"
        exit 1
    fi
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
    local required_packages="coreutils-base64 jq curl unzip opera-proxy zapret"
    for pkg in $required_packages; do
        if ! opkg list-installed | grep -q "^${pkg} "; then
            echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ $pkg..."
            if ! opkg install "$pkg"; then
                echo "‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å $pkg"
                exit 1
            fi
        fi
    done
    
    # –î–∞–ª—å–Ω–µ–π—à–∞—è –ª–æ–≥–∏–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞...
    install_awg_packages || echo "‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –ø—Ä–æ–±–ª–µ–º—ã —Å AmneziaWG"
    
    echo "‚úÖ –°–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ"
}

# –í—ã–∑–æ–≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
main "$@"
