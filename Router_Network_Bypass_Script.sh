#!/bin/sh

set -e

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ root
if [ "$(id -u)" -ne 0 ]; then
    echo "‚ùå –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è —Å –ø—Ä–∞–≤–∞–º–∏ root"
    exit 1
fi

LOG_FILE="/tmp/router_config_$(date +%Y%m%d_%H%M%S).log"
exec > >(tee -a "$LOG_FILE") 2>&1
exec 2>&1

echo "=== –ù–∞—á–∞–ª–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞ $(date) ==="

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º —Å –ø–∞–∫–µ—Ç–∞–º–∏
diagnose_package_issue() {
    local package="$1"
    echo "üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–∞–∫–µ—Ç–æ–º: $package"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø–∞–∫–µ—Ç–∞ –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è—Ö
    echo "üì¶ –ü–æ–∏—Å–∫ –ø–∞–∫–µ—Ç–∞ –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è—Ö..."
    if opkg list | grep -q "^$package "; then
        echo "‚úÖ –ü–∞–∫–µ—Ç –Ω–∞–π–¥–µ–Ω –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏"
        opkg info "$package" | head -5
    else
        echo "‚ùå –ü–∞–∫–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è—Ö"
        
        # –ü–æ–∏—Å–∫ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö –∏–º–µ–Ω
        echo "üîç –ü–æ–∏—Å–∫ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö –∏–º–µ–Ω –ø–∞–∫–µ—Ç–∞..."
        case "$package" in
            "opera-proxy")
                opkg list | grep -i "opera\|proxy" | head -10
                ;;
            "luci-app-dns-failsafe-proxy")
                opkg list | grep -i "dns.*fail.*safe\|fail.*safe.*dns" | head -5
                ;;
            "zapret")
                opkg list | grep -i "zapret\|block\|filter\|dpi" | head -10
                ;;
            *)
                opkg list | grep -i "$package" | head -5
                ;;
        esac
    fi
}

# –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–∞–∫–µ—Ç–æ–≤ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
checkPackageAndInstall() {
    local name="$1"
    local isRequired="${2:-0}"
    local alt="${3:-}"

    echo "üì¶ –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–∞–∫–µ—Ç–∞: $name"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ —É–∂–µ –ø–∞–∫–µ—Ç
    if opkg list-installed | grep -q "^${name} "; then
        echo "‚úÖ $name —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        return 0
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
    if [ -n "$alt" ]; then
        if opkg list-installed | grep -q "^${alt} "; then
            echo "‚úÖ –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–∞–∫–µ—Ç $alt —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
            return 0
        fi
    fi

    echo "üîÑ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ $name..."
    
    # –ü–æ–ø—ã—Ç–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    if opkg install "$name"; then
        echo "‚úÖ $name —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ"
        return 0
    else
        echo "‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ $name"
        
        # –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º—ã
        diagnose_package_issue "$name"
        
        # –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–∞–∫–µ—Ç
        if [ -n "$alt" ]; then
            echo "üîÑ –ü–æ–ø—ã—Ç–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–≥–æ –ø–∞–∫–µ—Ç–∞: $alt"
            if opkg install "$alt"; then
                echo "‚úÖ –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–∞–∫–µ—Ç $alt —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ"
                return 0
            else
                echo "‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–≥–æ –ø–∞–∫–µ—Ç–∞ $alt"
            fi
        fi
        
        if [ "$isRequired" = "1" ]; then
            echo "üí° –†–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã:"
            echo "   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É: opkg update"
            echo "   2. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ"
            echo "   3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–∞–∫–µ—Ç –≤—Ä—É—á–Ω—É—é"
            if [ -n "$alt" ]; then
                echo "   4. –ò–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–∞–∫–µ—Ç: $alt"
            fi
            exit 1
        fi
        return 1
    fi
}

# –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ Zapret (–±–µ–∑ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏)
install_zapret_simple() {
    echo "üîß –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏..."
    
    local found=0
    
    # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –≥–æ—Ç–æ–≤—ã–µ –ø–∞–∫–µ—Ç—ã
    local packages="
        zapret
        luci-app-zapret
    "
    
    for pkg in $packages; do
        if opkg list | grep -q "^$pkg "; then
            echo "‚úÖ –ù–∞–π–¥–µ–Ω –ø–∞–∫–µ—Ç: $pkg"
            if opkg install "$pkg"; then
                echo "‚úÖ $pkg —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ"
                found=1
            else
                echo "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å $pkg"
            fi
        fi
    done
    
    if [ "$found" -eq 0 ]; then
        echo "‚ö†Ô∏è Zapret –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è—Ö"
        echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏..."
        setup_alternative_blocking
        found=1
    fi
    
    return $found
}

# –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
setup_alternative_blocking() {
    echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏..."
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
    cat << 'EOF' > /usr/bin/simple-blocker
#!/bin/sh

BLOCKLIST_DIR="/etc/simple-blocker"
BLOCKLIST_FILE="$BLOCKLIST_DIR/blocklist.txt"
IPSET_NAME="blocked_sites"

case "$1" in
    start)
        echo "–ó–∞–ø—É—Å–∫ –ø—Ä–æ—Å—Ç–æ–≥–æ –±–ª–æ–∫–∏—Ä–æ–≤—â–∏–∫–∞..."
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        mkdir -p "$BLOCKLIST_DIR"
        
        # –°–æ–∑–¥–∞–Ω–∏–µ ipset –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if ! ipset list "$IPSET_NAME" >/dev/null 2>&1; then
            ipset create "$IPSET_NAME" hash:net
        fi
        
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª iptables –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
        if ! iptables -t filter -L | grep -q "$IPSET_NAME"; then
            iptables -t filter -I FORWARD -m set --match-set "$IPSET_NAME" dst -j DROP
            iptables -t filter -I OUTPUT -m set --match-set "$IPSET_NAME" dst -j DROP
        fi
        
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–ª–æ–∫–ª–∏—Å—Ç–∞ –µ—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if [ -f "$BLOCKLIST_FILE" ]; then
            while read -r domain; do
                [ -z "$domain" ] && continue
                [ "${domain#\#}" != "$domain" ] && continue
                
                # –†–∞–∑—Ä–µ—à–∞–µ–º –¥–æ–º–µ–Ω –≤ IP –∏ –¥–æ–±–∞–≤–ª—è–µ–º –≤ ipset
                for ip in $(nslookup "$domain" 2>/dev/null | grep "Address" | grep -v "#" | awk '{print $3}'); do
                    ipset add "$IPSET_NAME" "$ip" 2>/dev/null
                done
            done < "$BLOCKLIST_FILE"
        fi
        
        echo "‚úÖ –ü—Ä–æ—Å—Ç–æ–π –±–ª–æ–∫–∏—Ä–æ–≤—â–∏–∫ –∑–∞–ø—É—â–µ–Ω"
        ;;
    stop)
        echo "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Å—Ç–æ–≥–æ –±–ª–æ–∫–∏—Ä–æ–≤—â–∏–∫–∞..."
        
        # –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª iptables
        iptables -t filter -D FORWARD -m set --match-set "$IPSET_NAME" dst -j DROP 2>/dev/null || true
        iptables -t filter -D OUTPUT -m set --match-set "$IPSET_NAME" dst -j DROP 2>/dev/null || true
        
        # –û—á–∏—Å—Ç–∫–∞ ipset
        ipset flush "$IPSET_NAME" 2>/dev/null || true
        
        echo "‚úÖ –ü—Ä–æ—Å—Ç–æ–π –±–ª–æ–∫–∏—Ä–æ–≤—â–∏–∫ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        ;;
    update)
        echo "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–ª–æ–∫–ª–∏—Å—Ç–∞..."
        
        if [ -f "$BLOCKLIST_FILE" ]; then
            ipset flush "$IPSET_NAME"
            
            while read -r domain; do
                [ -z "$domain" ] && continue
                [ "${domain#\#}" != "$domain" ] && continue
                
                for ip in $(nslookup "$domain" 2>/dev/null | grep "Address" | grep -v "#" | awk '{print $3}'); do
                    ipset add "$IPSET_NAME" "$ip" 2>/dev/null
                done
            done < "$BLOCKLIST_FILE"
        fi
        
        echo "‚úÖ –ë–ª–æ–∫–ª–∏—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω"
        ;;
    *)
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 {start|stop|update}"
        exit 1
        ;;
esac
EOF

    chmod +x /usr/bin/simple-blocker
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–≥–æ –±–ª–æ–∫–ª–∏—Å—Ç–∞
    mkdir -p /etc/simple-blocker
    cat << 'EOF' > /etc/simple-blocker/blocklist.txt
# –ë–∞–∑–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
example.com
test.com
EOF

    # –°–æ–∑–¥–∞–Ω–∏–µ init —Å–∫—Ä–∏–ø—Ç–∞
    cat << 'EOF' > /etc/init.d/simple-blocker
#!/bin/sh /etc/rc.common

START=95
STOP=10

start() {
    simple-blocker start
}

stop() {
    simple-blocker stop
}

restart() {
    stop
    sleep 2
    start
}
EOF

    chmod +x /etc/init.d/simple-blocker
    
    echo "‚úÖ –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞"
    echo "üí° –ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:"
    echo "   /etc/init.d/simple-blocker start - –∑–∞–ø—É—Å–∫"
    echo "   /etc/init.d/simple-blocker stop - –æ—Å—Ç–∞–Ω–æ–≤–∫–∞"
    echo "   simple-blocker update - –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–ª–æ–∫–ª–∏—Å—Ç–∞"
}

# –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Opera Proxy
install_opera_proxy() {
    echo "üîß –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ Opera Proxy..."
    
    local packages="
        opera-proxy
        luci-app-opera-proxy
    "
    
    local found=0
    for pkg in $packages; do
        if opkg list | grep -q "^$pkg "; then
            echo "‚úÖ –ù–∞–π–¥–µ–Ω –ø–∞–∫–µ—Ç: $pkg"
            if opkg install "$pkg"; then
                echo "‚úÖ $pkg —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ"
                found=1
                break
            else
                echo "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å $pkg"
            fi
        fi
    done
    
    if [ "$found" -eq 0 ]; then
        echo "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Opera Proxy"
        echo "üí° –ò—Å–ø–æ–ª—å–∑—É–µ–º sing-box –¥–ª—è –ø—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏—è —Ç—Ä–∞—Ñ–∏–∫–∞"
    fi
    
    return $found
}

# –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤ DNS
install_dns_failsafe_proxy() {
    echo "üîß –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ DNS Fail-Safe Proxy..."
    
    local packages="
        dns-failsafe-proxy
        luci-app-dns-failsafe-proxy
    "
    
    local found=0
    for pkg in $packages; do
        if opkg list | grep -q "^$pkg "; then
            echo "‚úÖ –ù–∞–π–¥–µ–Ω –ø–∞–∫–µ—Ç: $pkg"
            if opkg install "$pkg"; then
                echo "‚úÖ $pkg —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ"
                found=1
                break
            else
                echo "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å $pkg"
            fi
        fi
    done
    
    if [ "$found" -eq 0 ]; then
        echo "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å DNS Fail-Safe Proxy"
        echo "üí° –ò—Å–ø–æ–ª—å–∑—É–µ–º dnsmasq-full –¥–ª—è DNS"
    fi
    
    return $found
}

# –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ AmneziaWG —á–µ—Ä–µ–∑ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç
install_awg_packages() {
    echo "üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ AmneziaWG —á–µ—Ä–µ–∑ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç..."
    
    local install_url="https://raw.githubusercontent.com/Slava-Shchipunov/awg-openwrt/refs/heads/master/amneziawg-install.sh"
    local temp_script="/tmp/amneziawg-install.sh"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–∫—Ä–∏–ø—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    echo "üì° –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–∫—Ä–∏–ø—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏..."
    if ! wget --spider "$install_url" 2>/dev/null; then
        echo "‚ùå –°–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        return 1
    fi
    
    echo "‚úÖ –°–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –¥–æ—Å—Ç—É–ø–µ–Ω"
    
    # –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞
    echo "‚¨áÔ∏è  –ó–∞–≥—Ä—É–∑–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏..."
    if ! wget -O "$temp_script" "$install_url"; then
        echo "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∫—Ä–∏–ø—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ —Ñ–∞–π–ª –Ω–µ –ø—É—Å—Ç–æ–π
    if [ ! -s "$temp_script" ]; then
        echo "‚ùå –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –ø—É—Å—Ç"
        rm -f "$temp_script"
        return 1
    fi
    
    echo "üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ AmneziaWG..."
    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞
    if sh "$temp_script"; then
        echo "‚úÖ AmneziaWG —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç"
        rm -f "$temp_script"
        return 0
    else
        echo "‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ AmneziaWG —á–µ—Ä–µ–∑ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç"
        rm -f "$temp_script"
        return 1
    fi
}

# –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ sing-box —á–µ—Ä–µ–∑ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç
install_sing_box() {
    echo "üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ sing-box —á–µ—Ä–µ–∑ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç..."
    
    local install_url="https://sing-box.app/install.sh"
    local temp_script="/tmp/sing-box-install.sh"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–∫—Ä–∏–ø—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    echo "üì° –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–∫—Ä–∏–ø—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ sing-box..."
    if ! curl -fsSL --head "$install_url" > /dev/null 2>&1; then
        echo "‚ùå –°–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ sing-box –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        return 1
    fi
    
    echo "‚úÖ –°–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ sing-box –¥–æ—Å—Ç—É–ø–µ–Ω"
    
    # –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞
    echo "‚¨áÔ∏è  –ó–∞–≥—Ä—É–∑–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ sing-box..."
    if ! curl -fsSL -o "$temp_script" "$install_url"; then
        echo "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∫—Ä–∏–ø—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ sing-box"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ —Ñ–∞–π–ª –Ω–µ –ø—É—Å—Ç–æ–π
    if [ ! -s "$temp_script" ]; then
        echo "‚ùå –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç sing-box –ø—É—Å—Ç"
        rm -f "$temp_script"
        return 1
    fi
    
    echo "üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ sing-box..."
    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞
    if sh "$temp_script"; then
        echo "‚úÖ sing-box —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç"
        rm -f "$temp_script"
        return 0
    else
        echo "‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ sing-box —á–µ—Ä–µ–∑ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç"
        rm -f "$temp_script"
        return 1
    fi
}

manage_package() {
    local name="$1"
    local autostart="$2"
    local process="$3"

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ –ø–∞–∫–µ—Ç
    if opkg list-installed | grep -q "^${name} "; then
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞, –≤–∫–ª—é—á–µ–Ω –ª–∏ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫
        if /etc/init.d/"$name" enabled > /dev/null 2>&1; then
            if [ "$autostart" = "disable" ]; then
                if /etc/init.d/"$name" disable; then
                    echo "‚úÖ –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ $name –æ—Ç–∫–ª—é—á–µ–Ω"
                else
                    echo "‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞ $name"
                fi
            fi
        else
            if [ "$autostart" = "enable" ]; then
                if /etc/init.d/"$name" enable; then
                    echo "‚úÖ –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ $name –≤–∫–ª—é—á–µ–Ω"
                else
                    echo "‚ùå –û—à–∏–±–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞ $name"
                fi
            fi
        fi

        # –ü—Ä–æ–≤–µ—Ä–∫–∞, –∑–∞–ø—É—â–µ–Ω –ª–∏ –ø—Ä–æ—Ü–µ—Å—Å
        if pgrep -f "$name" > /dev/null 2>&1; then
            if [ "$process" = "stop" ]; then
                if /etc/init.d/"$name" stop; then
                    echo "‚úÖ –°–µ—Ä–≤–∏—Å $name –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
                else
                    echo "‚ùå –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ—Ä–≤–∏—Å–∞ $name"
                fi
            fi
        else
            if [ "$process" = "start" ]; then
                if /etc/init.d/"$name" start; then
                    echo "‚úÖ –°–µ—Ä–≤–∏—Å $name –∑–∞–ø—É—â–µ–Ω"
                else
                    echo "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ $name"
                fi
            fi
        fi
    else
        echo "‚ö†Ô∏è –ü–∞–∫–µ—Ç $name –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
}

checkAndAddDomainPermanentName() {
    local name="$1"
    local ip="$2"
    local nameRule="option name '${name}'"
    
    if ! uci show dhcp | grep -qF "$nameRule"; then 
        uci add dhcp domain
        uci set "dhcp.@domain[-1].name=${name}"
        uci set "dhcp.@domain[-1].ip=${ip}"
        echo "‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –¥–æ–º–µ–Ω: $name -> $ip"
    else
        echo "‚úÖ –î–æ–º–µ–Ω $name —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    fi
}

byPassGeoBlockComssDNS() {
    echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ dhcp –¥–ª—è –æ–±—Ö–æ–¥–∞ –≥–µ–æ–±–ª–æ–∫–∏—Ä–æ–≤–æ–∫..."

    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è UCI
    uci batch << EOF
set dhcp.cfg01411c.strictorder='1'
set dhcp.cfg01411c.filter_aaaa='1'
EOF

    # –û—á–∏—Å—Ç–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤
    while uci delete dhcp.cfg01411c.server 2>/dev/null; do :; done
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤
    uci add_list dhcp.cfg01411c.server='127.0.0.1#5053'
    uci add_list dhcp.cfg01411c.server='127.0.0.1#5054'
    uci add_list dhcp.cfg01411c.server='127.0.0.1#5055'
    uci add_list dhcp.cfg01411c.server='127.0.0.1#5056'
    uci add_list dhcp.cfg01411c.server='/*.chatgpt.com/127.0.0.1#5056'
    uci add_list dhcp.cfg01411c.server='/*.openai.com/127.0.0.1#5056'
    
    uci commit dhcp

    echo "üîß –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ ChatGPT..."

    checkAndAddDomainPermanentName "chatgpt.com" "83.220.169.155"
    checkAndAddDomainPermanentName "openai.com" "83.220.169.155"

    if service dnsmasq restart && service odhcpd restart; then
        echo "‚úÖ DNS —Å–µ—Ä–≤–∏—Å—ã –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ"
        return 0
    else
        echo "‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ DNS —Å–µ—Ä–≤–∏—Å–æ–≤"
        return 1
    fi
}

# –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞
create_backup() {
    local DIR="/etc/config"
    local DIR_BACKUP="/root/backup_openwrt_$(date +%Y%m%d_%H%M%S)"
    local config_files="network firewall doh-proxy dhcp"
    
    if [ ! -d "$DIR_BACKUP" ]; then
        echo "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
        if ! mkdir -p "$DIR_BACKUP"; then
            echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –±—ç–∫–∞–ø–∞"
            return 1
        fi
        
        for file in $config_files; do
            if [ -f "${DIR}/${file}" ]; then
                if cp -f "${DIR}/${file}" "${DIR_BACKUP}/${file}"; then
                    echo "‚úÖ –ë—ç–∫–∞–ø $file —Å–æ–∑–¥–∞–Ω"
                else
                    echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –±—ç–∫–∞–ø–µ $file"
                    return 1
                fi
            else
                echo "‚ö†Ô∏è –§–∞–π–ª ${DIR}/${file} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º"
            fi
        done
        echo "‚úÖ –ë—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω –≤ $DIR_BACKUP"
        return 0
    else
        echo "‚úÖ –ë—ç–∫–∞–ø —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
        return 0
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–∏—Å–æ–≤
check_service_health() {
    local service="$1"
    local test_url="${2:-}"
    
    if ! service "$service" status > /dev/null 2>&1; then
        echo "‚ùå –°–µ—Ä–≤–∏—Å $service –Ω–µ –∑–∞–ø—É—â–µ–Ω"
        return 1
    fi
    
    if [ -n "$test_url" ]; then
        if curl --max-time 10 -s -o /dev/null "$test_url"; then
            echo "‚úÖ –°–µ—Ä–≤–∏—Å $service —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ"
            return 0
        else
            echo "‚ö†Ô∏è –°–µ—Ä–≤–∏—Å $service –∑–∞–ø—É—â–µ–Ω, –Ω–æ —Ç–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω"
            return 2
        fi
    else
        echo "‚úÖ –°–µ—Ä–≤–∏—Å $service –∑–∞–ø—É—â–µ–Ω"
        return 0
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞
check_internet_connection() {
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è..."
    if ping -c 2 -W 5 8.8.8.8 > /dev/null 2>&1; then
        echo "‚úÖ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ"
        return 0
    else
        echo "‚ùå –ù–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è"
        return 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ sing-box
check_sing_box_version() {
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ sing-box..."
    
    if command -v sing-box > /dev/null 2>&1; then
        local current_version
        current_version=$(sing-box version 2>/dev/null | grep -o 'version [0-9.]*' | cut -d' ' -f2)
        
        if [ -n "$current_version" ]; then
            echo "‚úÖ –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è sing-box: $current_version"
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Ç—Ä–µ–±—É–µ–º—É—é –≤–µ—Ä—Å–∏—é
            local min_version="1.12.0"
            if [ "$(printf '%s\n%s\n' "$min_version" "$current_version" | sort -V | tail -n1)" = "$current_version" ]; then
                echo "‚úÖ –í–µ—Ä—Å–∏—è sing-box —Å–æ–≤–º–µ—Å—Ç–∏–º–∞"
                return 0
            else
                echo "‚ö†Ô∏è –í–µ—Ä—Å–∏—è sing-box —É—Å—Ç–∞—Ä–µ–ª–∞ ($current_version < $min_version)"
                return 1
            fi
        else
            echo "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤–µ—Ä—Å–∏—é sing-box"
            return 2
        fi
    else
        echo "‚ùå sing-box –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        return 3
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
main() {
    local is_manual_input_parameters="${1:-n}"
    local is_reconfig_podkop="${2:-y}"
    
    echo "üöÄ –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ OpenWRT —Ä–æ—É—Ç–µ—Ä–∞..."
    echo "üìù –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤: $LOG_FILE"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞
    if ! check_internet_connection; then
        echo "‚ö†Ô∏è –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞..."
    fi
    
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–∞–∫–µ—Ç–æ–≤
    echo "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–∞–∫–µ—Ç–æ–≤..."
    if opkg update; then
        echo "‚úÖ –°–ø–∏—Å–æ–∫ –ø–∞–∫–µ—Ç–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω"
    else
        echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–∞–∫–µ—Ç–æ–≤"
        exit 1
    fi
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
    local required_packages="coreutils-base64 jq curl unzip"
    for pkg in $required_packages; do
        if ! checkPackageAndInstall "$pkg" "1"; then
            exit 1
        fi
    done
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ AmneziaWG —á–µ—Ä–µ–∑ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç
    if ! install_awg_packages; then
        echo "‚ö†Ô∏è –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª"
        echo "üí° –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É AmneziaWG"
    fi
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ sing-box —á–µ—Ä–µ–∑ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç
    echo "üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ sing-box..."
    if ! install_sing_box; then
        echo "‚ùå –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ sing-box –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª"
        echo "üîÑ –ü—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ —É—Å—Ç–∞–Ω–æ–≤–∫–∏..."
        
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
        if checkPackageAndInstall "sing-box" "1"; then
            echo "‚úÖ sing-box —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è"
        else
            echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å sing-box"
            echo "üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ sing-box –≤—Ä—É—á–Ω—É—é:"
            echo "   curl -fsSL https://sing-box.app/install.sh | sh"
            exit 1
        fi
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ sing-box
    if ! check_sing_box_version; then
        echo "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ sing-box..."
        if install_sing_box; then
            echo "‚úÖ sing-box —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω"
        else
            echo "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å sing-box, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–µ–π"
        fi
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ dnsmasq-full
    if opkg list-installed | grep -q "dnsmasq-full "; then
        echo "‚úÖ dnsmasq-full —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ dnsmasq-full..."
        if cd /tmp/ && opkg download dnsmasq-full; then
            if opkg remove dnsmasq && opkg install dnsmasq-full --cache /tmp/; then
                echo "‚úÖ dnsmasq-full —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ"
            else
                echo "‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ dnsmasq-full"
                exit 1
            fi
        else
            echo "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ dnsmasq-full"
            exit 1
        fi
    fi
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ dnsmasq
    echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ dnsmasq..."
    uci set dhcp.@dnsmasq[0].confdir='/tmp/dnsmasq.d'
    uci commit dhcp
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞
    if ! create_backup; then
        echo "‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±—ç–∫–∞–ø–∞"
        exit 1
    fi
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞–∫–µ—Ç—ã
    echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤..."
    
    # Zapret (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞)
    install_zapret_simple
    
    # Opera Proxy
    install_opera_proxy
    
    # DNS Fail-Safe Proxy
    install_dns_failsafe_proxy
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ DHCP
    echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ DHCP..."
    uci set dhcp.cfg01411c.strictorder='1'
    uci set dhcp.cfg01411c.filter_aaaa='1'
    uci commit dhcp
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ sing-box
    echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ sing-box..."
    cat << 'EOF' > /etc/sing-box/config.json
{
    "log": {
        "disabled": true,
        "level": "error"
    },
    "inbounds": [
        {
            "type": "tproxy",
            "listen": "::",
            "listen_port": 1100,
            "sniff": false
        }
    ],
    "outbounds": [
        {
            "type": "http",
            "server": "127.0.0.1",
            "server_port": 18080
        }
    ],
    "route": {
        "auto_detect_interface": true
    }
}
EOF

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ sing-box –≤ UCI
    uci set sing-box.main.enabled='1'
    uci set sing-box.main.user='root'
    uci add_list sing-box.main.ifaces='wan'
    uci add_list sing-box.main.ifaces='wan6'
    uci commit sing-box
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª firewall
    if ! uci show firewall | grep -q "Block_UDP_443"; then
        echo "üîß –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ QUIC..."
        
        uci batch << 'EOF'
add firewall rule
set firewall.@rule[-1].name='Block_UDP_80'
add_list firewall.@rule[-1].proto='udp'
set firewall.@rule[-1].src='lan'
set firewall.@rule[-1].dest='wan'
set firewall.@rule[-1].dest_port='80'
set firewall.@rule[-1].target='REJECT'
add firewall rule
set firewall.@rule[-1].name='Block_UDP_443'
add_list firewall.@rule[-1].proto='udp'
set firewall.@rule[-1].src='lan'
set firewall.@rule[-1].dest='wan'
set firewall.@rule[-1].dest_port='443'
set firewall.@rule[-1].target='REJECT'
EOF
        uci commit firewall
        echo "‚úÖ –ü—Ä–∞–≤–∏–ª–∞ firewall –¥–æ–±–∞–≤–ª–µ–Ω—ã"
    else
        echo "‚úÖ –ü—Ä–∞–≤–∏–ª–∞ firewall —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç"
    fi
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ö–æ–¥–∞ –≥–µ–æ–±–ª–æ–∫–∏—Ä–æ–≤–æ–∫
    echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ö–æ–¥–∞ –≥–µ–æ–±–ª–æ–∫–∏—Ä–æ–≤–æ–∫..."
    if byPassGeoBlockComssDNS; then
        echo "‚úÖ –û–±—Ö–æ–¥ –≥–µ–æ–±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω —É—Å–ø–µ—à–Ω–æ"
    else
        echo "‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –ø—Ä–æ–±–ª–µ–º—ã —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π –æ–±—Ö–æ–¥–∞ –≥–µ–æ–±–ª–æ–∫–∏—Ä–æ–≤–æ–∫"
    fi
    
    # –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
    echo "üîß –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    manage_package "sing-box" "enable" "start"
    
    # –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Å—Ç–æ–≥–æ –±–ª–æ–∫–∏—Ä–æ–≤—â–∏–∫–∞ –µ—Å–ª–∏ Zapret –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
    if ! opkg list-installed | grep -q "zapret "; then
        echo "üîß –ó–∞–ø—É—Å–∫ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–≥–æ –±–ª–æ–∫–∏—Ä–æ–≤—â–∏–∫–∞..."
        /etc/init.d/simple-blocker enable
        /etc/init.d/simple-blocker start
    else
        manage_package "zapret" "enable" "start"
    fi
    
    # –§–∏–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
    echo "üîç –§–∏–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏..."
    check_service_health "sing-box"
    
    echo ""
    echo "üéâ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
    echo "üìã –õ–æ–≥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: $LOG_FILE"
    echo "üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–æ—É—Ç–µ—Ä –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π"
    
    return 0
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤
trap 'echo "‚ùå –°–∫—Ä–∏–ø—Ç –ø—Ä–µ—Ä–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"; exit 130' INT
trap 'echo "‚ùå –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω –∞–≤–∞—Ä–∏–π–Ω–æ"; exit 1' TERM

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"
